name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25"

      # 3. Cache Go modules for faster builds
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 4. Download dependencies
      - name: Download dependencies
        run: go mod download

      # 5. Run Go tests
      - name: Run unit tests
        run: go test ./... -v

      # 6. Build Go applications (verify they compile)
      - name: Build applications
        run: |
          go build -o api-service ./api
          go build -o alert-consumer ./consumers/alert
          go build -o persistence-consumer ./consumers/persistence
          go build -o analytics-consumer ./consumers/analytics

      # 7. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Build & push Docker images for each microservice
      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/stock-alerts-api:latest

      - name: Build and push Alert consumer image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.alert
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/stock-alerts-alert-consumer:latest

      - name: Build and push Persistence consumer image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.persistence
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/stock-alerts-persistence-consumer:latest

      - name: Build and push Analytics consumer image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.analytics
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/stock-alerts-analytics-consumer:latest

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to staging
        run: |
          echo "ðŸš€ Deploying to staging environment..."
          echo "In a real setup, you would:"
          echo "- Connect to your staging server"
          echo "- Pull the new Docker images"
          echo "- Update docker-compose.yml"
          echo "- Restart services with: docker compose up -d"
